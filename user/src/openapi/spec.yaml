openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
  description: User management and authentication service for Clash Of Pok√©chakucha

servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          minLength: 3
          maxLength: 30
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        credits:
          type: number
          default: 0

    UserCreate:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 30
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8

    LoginCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: "#/components/schemas/User"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        400:
          description: Invalid input
        409:
          description: Username or email already exists

  /users/login:
    post:
      summary: Authenticate user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
      responses:
        200:
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        401:
          description: Invalid credentials

  /users/me:
    get:
      summary: Get current user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
